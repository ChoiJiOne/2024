#version 460 core

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(binding = 0, rgba32f) uniform image2D outputImage;

uniform float a;
uniform float b;
uniform float c;

float rand(vec2 co)
{
    return fract(sin(dot(co.xy, vec2(a, b))) * c);
}

void main()
{
    ivec2 texelCoords = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(outputImage);
    vec2 texCoords = vec2(texelCoords) / vec2(size);

    float x = rand(texCoords);
    vec4 colorRGBA = vec4(x, x, x, 1.0f);

    imageStore(outputImage, texelCoords, colorRGBA);
}