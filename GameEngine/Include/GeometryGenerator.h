#pragma once

#include <vector>

#include "Vertex.h"


/**
 * @brief 3D 기하 도형을 생성합니다.
 * 
 * @note 이 클래스의 멤버 변수와 메서드는 모두 static 입니다.
 */
class GeometryGenerator
{
public:
	/**
	 * @brief 3D 큐브의 정점과 인덱스 목록을 생성합니다.
	 * 
	 * @param size 3D 큐브의 X, Y, Z축 방향으로의 크기입니다.
	 * @param outVertices 생성한 큐브의 정점 목록입니다.
	 * @param outIndices  생성한 큐브의 인덱스 목록입니다.
	 */
	static void CreateCube(const Vector3f& size, std::vector<Vertex>& outVertices, std::vector<uint32_t>& outIndices);


	/**
	 * @brief 3D 구의 정점과 인덱스 목록을 생성합니다.
	 * 
	 * @param radius 3D 구의 반지름 길이입니다.
	 * @param tessellation 3D 구의 분할 횟수입니다. 크기는 3이상이여야 합니다.
	 * @param outVertices 생성한 구의 정점 목록입니다.
	 * @param outIndices  생성한 구의 인덱스 목록입니다.
	 */
	static void CreateSphere(float radius, uint32_t tessellation, std::vector<Vertex>& outVertices, std::vector<uint32_t>& outIndices);


	/**
	 * @brief 3D 원기둥의 정점과 인덱스 목록을 생성합니다.
	 *
	 * @param radius 3D 원기둥의 반지름 길이입니다.
	 * @param height 3D 원기둥의 높이입니다.
	 * @param tessellation 3D 원기둥의 분할 횟수입니다. 크기는 3이상이여야 합니다.
	 * @param outVertices 생성한 원기둥의 정점 목록입니다.
	 * @param outIndices  생성한 원기둥의 인덱스 목록입니다.
	 */
	static void CreateCylinder(float radius, float height, uint32_t tessellation, std::vector<Vertex>& outVertices, std::vector<uint32_t>& outIndices);


	/**
	 * @brief 3D 원뿔의 정점과 인덱스 목록을 생성합니다.
	 * 
	 * @param radius 3D 원뿔의 반지름 길이입니다.
	 * @param height 3D 원뿔의 높이입니다.
	 * @param tessellation 3D 원뿔의 분할 횟수입니다. 크기는 3이상이여야 합니다.
	 * @param outVertices 생성한 원뿔의 정점 목록입니다.
	 * @param outIndices  생성한 원뿔의 인덱스 목록입니다.
	 */
	static void CreateCone(float radius, float height, uint32_t tessellation, std::vector<Vertex>& outVertices, std::vector<uint32_t>& outIndices);


	/**
	 * @brief XY 평면의 쿼드를 생성합니다.
	 *
	 * @param xsize 쿼드의 X축 방향으로의 크기입니다.
	 * @param ysize 쿼드의 y축 방향으로의 크기입니다.
	 * @param outVertices 생성한 쿼드의 정점 목록입니다.
	 * @param outIndices 생성한 쿼드의 인덱스 목록입니다.
	 */
	static void CreateXYQuad(float xsize, float ysize, std::vector<Vertex>& outVertices, std::vector<uint32_t>& outIndices);


	/**
	 * @brief YZ 평면의 쿼드를 생성합니다.
	 *
	 * @param ysize 쿼드의 Y축 방향으로의 크기입니다.
	 * @param zsize 쿼드의 Z축 방향으로의 크기입니다.
	 * @param outVertices 생성한 쿼드의 정점 목록입니다.
	 * @param outIndices 생성한 쿼드의 인덱스 목록입니다.
	 */
	static void CreateYZQuad(float ysize, float zsize, std::vector<Vertex>& outVertices, std::vector<uint32_t>& outIndices);


	/**
	 * @brief XZ 평면의 쿼드를 생성합니다.
	 *
	 * @param xsize 쿼드의 X축 방향으로의 크기입니다.
	 * @param zsize 쿼드의 Z축 방향으로의 크기입니다.
	 * @param outVertices 생성한 쿼드의 정점 목록입니다.
	 * @param outIndices 생성한 쿼드의 인덱스 목록입니다.
	 */
	static void CreateXZQuad(float xsize, float zsize, std::vector<Vertex>& outVertices, std::vector<uint32_t>& outIndices);


private:
	/**
	 * @brief 3D 원기둥 상단/하단의 정점과 인덱스 목록을 생성합니다.
	 * 
	 * @param radius 3D 원기둥의 반지름 길이입니다.
	 * @param height 3D 원기둥의 높이입니다.
	 * @param tessellation 3D 원기둥의 분할 횟수입니다. 크기는 3이상이여야 합니다.
	 * @param bIsTop 상단인지 하단인지 확인합니다.
	 * @param outVertices 생성한 원기둥 상단/하단의 정점 목록입니다.
	 * @param outIndices  생성한 원기둥 상단/하단의 인덱스 목록입니다.
	 */
	static void CreateCylinderCap(float radius, float height, uint32_t tessellation, bool bIsTop, std::vector<Vertex>& outVertices, std::vector<uint32_t>& outIndices);


	/**
	 * @brief 정점의 접선 벡터와 쌍벡터를 계산합니다.
	 *
	 * @param outVertices 접선 벡터와 쌍벡터를 계산할 정점 목록입니다.
	 * @param outIndices 접선 벡터와 쌍벡터를 계산할 인덱스 목록입니다.
	 */
	static void ComputeTangent(std::vector<Vertex>& outVertices, std::vector<uint32_t>& outIndices);
};