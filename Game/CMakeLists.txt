cmake_minimum_required(VERSION 3.27)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})

set(PROJECT_NAME "FoxDash")
set(WINDOW_WIDTH 1000)
set(WINDOW_HEIGHT 800)
set(WINDOW_TITLE ${PROJECT_NAME})
set(IS_WINDOW_CENTERED 1)
configure_file(
    "${CMAKE_CURRENT_SOURCE_DIR}/Inc/App/AppConfig.h.in" 
    "${CMAKE_CURRENT_SOURCE_DIR}/Inc/App/AppConfig.h"
)

set(EXE_ICON_PATH "${CMAKE_CURRENT_SOURCE_DIR}/../Resource/Icon/Icon.ico")
configure_file(
    "${CMAKE_CURRENT_SOURCE_DIR}/Inc/Resource.rc.in"
    "${CMAKE_CURRENT_SOURCE_DIR}/Inc/Resource.rc"
)

set(PROJECT_PATH ${CMAKE_CURRENT_SOURCE_DIR})
set(PROJECT_INCLUDE_PATH "${PROJECT_PATH}/Inc")
set(PROJECT_SOURCE_PATH "${PROJECT_PATH}/Src")
set(SCRIPT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/../Script)
set(SHADER_PATH ${CMAKE_CURRENT_SOURCE_DIR}/../Shader)

file(GLOB_RECURSE PROJECT_INCLUDE_FILE "${PROJECT_INCLUDE_PATH}/**")
file(GLOB_RECURSE PROJECT_SOURCE_FILE "${PROJECT_SOURCE_PATH}/**")
file(GLOB_RECURSE SCRIPT_FILE "${SCRIPT_PATH}/**")
file(GLOB_RECURSE SHADER_FILE "${SHADER_PATH}/**")

add_executable(${PROJECT_NAME} WIN32 ${PROJECT_INCLUDE_FILE} ${PROJECT_SOURCE_FILE} ${SCRIPT_FILE} ${SHADER_FILE})

target_include_directories(${PROJECT_NAME} PUBLIC ${PROJECT_INCLUDE_PATH})
target_link_libraries(
    ${PROJECT_NAME} PUBLIC 
    Dbghelp.lib 
    Pathcch.lib 
    Shlwapi.lib 
    glad
    glfw
    glm
    imgui
    jsoncpp
    mimalloc
    miniaudio
    stb
)

target_compile_definitions(
    ${PROJECT_NAME}
    PUBLIC
    $<$<CONFIG:Debug>:DEBUG_MODE>
    $<$<CONFIG:Release>:RELEASE_MODE>
    $<$<CONFIG:RelWithDebInfo>:RELWITHDEBINFO_MODE>
    $<$<CONFIG:MinSizeRel>:MINSIZEREL_MODE>
)

set_property(TARGET ${PROJECT_NAME} PROPERTY MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
set_property(TARGET ${PROJECT_NAME} PROPERTY VS_DEBUGGER_WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/../")

source_group(TREE "${PROJECT_INCLUDE_PATH}" PREFIX "Game/Inc" FILES ${PROJECT_INCLUDE_FILE})
source_group(TREE "${PROJECT_SOURCE_PATH}" PREFIX "Game/Src" FILES ${PROJECT_SOURCE_FILE})
source_group(TREE "${SCRIPT_PATH}" PREFIX "Script" FILES ${SCRIPT_FILE})
source_group(TREE "${SHADER_PATH}" PREFIX "Shader" FILES ${SHADER_FILE})

# 셰이더 유효성 검사.
set(VALIDATOR_PATH "${SCRIPT_PATH}/ShaderValidator.bat")
foreach (SHADER_SOURCE_FILE IN LISTS SHADER_FILE)
    add_custom_command(
        TARGET ${PROJECT_NAME}
        POST_BUILD
        COMMAND ${VALIDATOR_PATH} ${SHADER_SOURCE_FILE}
    )
endforeach()